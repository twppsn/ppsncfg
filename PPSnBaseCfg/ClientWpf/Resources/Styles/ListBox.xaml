<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
			        xmlns:uiC="clr-namespace:TecWare.PPSn.Controls;assembly=PPSn.Desktop.UI">

    <ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>

    <Style x:Key="PPSnListBoxStyle" TargetType="{x:Type ListBox}">
		<Setter Property="Foreground" Value="{StaticResource PPSnWindowForegroundBrush}"/>
		<Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer x:Name="scrollviewer" Focusable="false" Padding="{TemplateBinding Padding}" Style="{StaticResource PPSnScrollViewerStyle}" >
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
					<ControlTemplate.Triggers>
						<Trigger Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled">
							<Setter TargetName="scrollviewer" Property="VerticalScrollBarVisibility" Value="Disabled"/>
						</Trigger>
						<Trigger Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled">
							<Setter TargetName="scrollviewer" Property="HorizontalScrollBarVisibility" Value="Disabled"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
            </Setter.Value> 
        </Setter>
    </Style>

	<Style x:Key="PPSnAlternatingListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="Background" Value="{StaticResource PPSnAlternation0Brush}"/>
		<Setter Property="Foreground" Value="{StaticResource PPSnWindowForegroundBrush}"/>
		<Setter Property="Margin" Value="0,0,0,1"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource PpsFocusVisualStyle}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Grid>
						<Border x:Name="panelBorder" Padding="6,1" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<ContentPresenter />
						</Border>
						<Rectangle x:Name="selectionRect" Stroke="{StaticResource PPSnMarkerBrush}" StrokeThickness="1" Opacity="0" IsHitTestVisible="False"
								   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
							<Setter Property="Background" TargetName="panelBorder" Value="{StaticResource PPSnAlternation1Brush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
							<Setter Property="Opacity" TargetName="selectionRect" Value="1" />
						</Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="PPSnNoSelectionListBoxItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource PPSnAlternatingListBoxItemStyle}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="panelBorder" Padding="6,1" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<ContentPresenter />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="ItemsControl.AlternationIndex" Value="1">
							<Setter Property="Background" TargetName="panelBorder" Value="{StaticResource PPSnAlternation1Brush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="UndoManagerListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Label x:Name="label" Content="{Binding Description}" Height="32" Padding="6,0"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" TargetName="label" Value="{StaticResource PPSnMouseOverBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UndoManagerListBoxStyle" TargetType="{x:Type uiC:UndoManagerListBox}">
        <Setter Property="ItemsSource" Value="{Binding}"/>
        <Setter Property="SelectionMode" Value="Extended"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource UndoManagerListBoxItemStyle}"/>
        <Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource PPSnWindowForegroundBrush}"/>
		<Setter Property="Background" Value="{StaticResource PPSnPopUpBackgroundBrush}"/>
		<Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type uiC:UndoManagerListBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="32"/>
                            </Grid.RowDefinitions>
							<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Style="{StaticResource PPSnScrollViewerStyle}">
                                <ItemsPresenter SnapsToDevicePixels="False"/>
                            </ScrollViewer>
							<TextBlock Grid.Row="1" Text="{Binding Path=FooterText, RelativeSource={RelativeSource AncestorType={x:Type uiC:UndoManagerListBox}}}"
									   Foreground="{StaticResource PPSnMarkerBrush}" Padding="6,0" VerticalAlignment="Center"/>
						</Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="PPSnEditableListboxItemStyle" TargetType="{x:Type uiC:PpsEditableListboxItem}">
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Focusable" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type uiC:PpsEditableListboxItem}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="54"/>
						</Grid.ColumnDefinitions>

						<ContentPresenter Grid.Column="0" />

						<Button x:Name="appendButton" Grid.Column="1" MinWidth="32"	HorizontalAlignment="Left" VerticalAlignment="Center"
								Command="{x:Static uiC:PpsEditableListbox.AppendNewItemCommand}"
								CommandParameter="{Binding}"
								Style="{DynamicResource PPSnCircleButtonStyle}"
								Tag="{StaticResource plusPathGeometry}"
								Visibility="Hidden"/>
						<Button x:Name="removeButton" Grid.Column="1" MinWidth="32"	HorizontalAlignment="Left" VerticalAlignment="Center"
								Command="{x:Static uiC:PpsEditableListbox.RemoveItemCommand}"
								CommandParameter="{Binding}"
								Style="{DynamicResource PPSnCircleButtonStyle}"
								Tag="{StaticResource deletePathGeometry}"
								Visibility="Hidden"/>

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsNewItem">
							<Trigger.Value>
								<sys:Boolean>true</sys:Boolean>
							</Trigger.Value>
							<Setter TargetName="appendButton" Property="Visibility" Value="Visible"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNewItem">
									<Condition.Value>
										<sys:Boolean>false</sys:Boolean>
									</Condition.Value>
								</Condition>
								<Condition Property="IsSelected">
									<Condition.Value>
										<sys:Boolean>true</sys:Boolean>
									</Condition.Value>
								</Condition>
							</MultiTrigger.Conditions>
							<Setter TargetName="removeButton" Property="Visibility" Value="Visible"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter Property="IsSelected" Value="True"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type uiC:PpsEditableListbox}" BasedOn="{StaticResource PPSnListBoxStyle}">
		<Setter Property="ItemContainerStyle" Value="{StaticResource PPSnEditableListboxItemStyle}"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="FocusManager.IsFocusScope" Value="True"/>
	</Style>

</ResourceDictionary>