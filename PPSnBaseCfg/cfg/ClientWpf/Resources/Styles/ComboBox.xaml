<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:ui="clr-namespace:TecWare.PPSn.UI;assembly=PPSn.Desktop.UI"
					xmlns:uiC="clr-namespace:TecWare.PPSn.Controls;assembly=PPSn.Desktop.UI" >

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<ui:LuaValueConverter x:Key="CollapseInaktiveConverter">
		<![CDATA[
		if value ~= nil and value then
			return true;
		else
			return false;
		end;
		]]>
	</ui:LuaValueConverter>

	<ui:LuaValueConverter x:Key="SelectedIndexConverter">
		<![CDATA[
		if value >= 0 then
			return true;
		else
			return false;
		end;
		]]>
	</ui:LuaValueConverter>

	<ControlTemplate x:Key="PPSnComboBoxToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
		<Grid>
			<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"	BorderThickness="{TemplateBinding BorderThickness}"	Background="{TemplateBinding Background}" />
			<Viewbox x:Name="arrowBox" HorizontalAlignment="Right" Width="20" Margin="0,0,1,0" Opacity=".5">
				<Canvas Width="24" Height="24">
					<Path x:Name="arrowPath" Data="M5,9 L6,8 L12,14 L18,8 L19,9 L12,16 L5,9Z" Fill="{StaticResource PPSnWindowForegroundBrush}"/>
				</Canvas>
			</Viewbox>
		</Grid>
		<ControlTemplate.Triggers>
			<!-- not ComboBox, used for various controls-->
			<DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type Control}}}">
				<DataTrigger.Value>
					<sys:Boolean>True</sys:Boolean>
				</DataTrigger.Value>
				<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
				<Setter TargetName="arrowBox" Property="Opacity" Value=".75"/>
			</DataTrigger>
			<Trigger Property="uiC:PpsReadOnlyPaneBehavior.IsReadOnly">
				<Trigger.Value>
					<sys:Boolean>True</sys:Boolean>
				</Trigger.Value>
				<Setter TargetName="arrowBox" Property="Visibility" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsEnabled">
				<Trigger.Value>
					<sys:Boolean>False</sys:Boolean>
				</Trigger.Value>
				<Setter TargetName="arrowBox" Property="Opacity" Value=".25"/>
			</Trigger>
			<Trigger Property="Tag">
				<Trigger.Value>
					<sys:Int32>1</sys:Int32>
				</Trigger.Value>
				<Setter TargetName="arrowBox" Property="Width" Value="18"/>
				<Setter TargetName="arrowBox" Property="Margin" Value="0,0,2,0"/>
				<Setter TargetName="arrowPath" Property="Data" Value="{DynamicResource magnifyPathGeometry}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="PPSnComboBoxClearButtonTemplate" TargetType="{x:Type Button}">
		<!--visual margin to dropDownArrow-->
		<Border Background="Transparent" Padding="0,0,6,0">
			<Viewbox x:Name="clearBox" Opacity=".75">
				<Canvas Width="24" Height="24">
					<Path Data="M6,7L 7,6L 12,11L 17,6L 18,7L 13,12L 18,17L 17,18L 12,13L 7,18L 6,17L 11,12L 6,7 Z"
						  Fill="{StaticResource PPSnWindowForegroundBrush}"/>
				</Canvas>
			</Viewbox>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="clearBox" Property="Opacity" Value="1"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="PPSnComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{StaticResource PPSnWindowForegroundBrush}"/>
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border Name="border" Background="Transparent" SnapsToDevicePixels="True" Padding="4,0" Height="33">
						<ContentPresenter VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsHighlighted" Value="True">
							<Setter Property="Panel.Background" TargetName="border" Value="{StaticResource PPSnMouseOverBrush}"/>
						</Trigger>
						<!--<DataTrigger Binding="{Binding Path=IsActive, Converter={StaticResource CollapseInaktiveConverter}, Mode=OneWay}">
							<DataTrigger.Value>
								<sys:Boolean>false</sys:Boolean>
							</DataTrigger.Value>
							<Setter Property="Panel.Visibility" TargetName="border" Value="Collapsed"/>
						</DataTrigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PPSnComboBoxStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="Height" Value="23"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="TextElement.Foreground" Value="{StaticResource PPSnWindowForegroundBrush}"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource PPSnComboBoxItemStyle}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource PPSnControlNormalBorderBrush}" />
		<Setter Property="Background" Value="{StaticResource PPSnControlBackgroundBrush}"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton x:Name="PART_ToggleButton" ClickMode="Press" Focusable="False"
									  IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
									  Template="{StaticResource PPSnComboBoxToggleButtonTemplate}" Background="{TemplateBinding Background}"
									  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
						<ContentPresenter x:Name="PART_ContentSite" Margin="5,3,23,3" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center"                           
										  Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
										  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
										  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
						<Button x:Name="clearButton" HorizontalAlignment="Right" Width="27" Margin="0,2,18,2" Focusable="False" Visibility="Hidden"
								Template="{StaticResource PPSnComboBoxClearButtonTemplate}">
							<Button.Triggers>
								<EventTrigger RoutedEvent="Button.Click">
									<EventTrigger.Actions>
										<BeginStoryboard>
											<Storyboard>
												<ObjectAnimationUsingKeyFrames
														Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
														Storyboard.TargetProperty="(ComboBox.SelectedItem)">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger.Actions>
								</EventTrigger>
							</Button.Triggers>
						</Button>
						<TextBox Name="PART_EditableTextBox" Margin="5,3,23,3" IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden" Background="Transparent"
								 HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Focusable="True">
							<TextBox.Template>
								<ControlTemplate TargetType="{x:Type TextBox}" >
									<Border x:Name="PART_ContentHost" Focusable="False"/>
								</ControlTemplate>
							</TextBox.Template>
						</TextBox>
						<Popup Name="PART_Popup" Placement="Bottom" VerticalOffset="1" Focusable="False" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
							    AllowsTransparency="True" PopupAnimation="Slide">
							<Grid Name="PART_DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
								<Border Name="PART_DropDownBorder" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{StaticResource PPSnControlFocusedBorderBrush}">
									<ScrollViewer SnapsToDevicePixels="True" Style="{DynamicResource PPSnScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
										<VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
									</ScrollViewer>
								</Border>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter Property="FrameworkElement.MinHeight" TargetName="PART_DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="ItemsControl.IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
						</Trigger>
						<Trigger Property="ComboBox.IsEditable" Value="True">
							<Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
							<Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
							<Setter Property="Visibility" TargetName="PART_ContentSite" Value="Hidden"/>
						</Trigger>

						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{StaticResource PPSnWindowDisabledForegroundBrush}"/>
						</Trigger>

						<Trigger Property="uiC:PpsReadOnlyPaneBehavior.IsReadOnly">
							<Trigger.Value>
								<sys:Boolean>True</sys:Boolean>
							</Trigger.Value>
							<Setter TargetName="PART_ToggleButton" Property="IsEnabled" Value="False"/>
							<Setter TargetName="PART_EditableTextBox" Property="IsEnabled" Value="False"/>
							<Setter TargetName="PART_ContentSite" Property="Margin" Value="5,3"/>
							<!--KeyBoard-Selection-->
							<Setter Property="Focusable" Value="False"/>
						</Trigger>

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=(uiC:PpsComboBoxBehavior.IsNullable), RelativeSource={RelativeSource Self}, Mode=OneWay}">
									<Condition.Value>
										<sys:Boolean>True</sys:Boolean>
									</Condition.Value>
								</Condition>
								<Condition Binding="{Binding Path=(Selector.SelectedIndex), RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource SelectedIndexConverter}}">
									<Condition.Value>
										<sys:Boolean>True</sys:Boolean>
									</Condition.Value>
								</Condition>
								<Condition Binding="{Binding Path=(ComboBox.IsEditable), RelativeSource={RelativeSource Self}, Mode=OneWay}">
									<Condition.Value>
										<sys:Boolean>False</sys:Boolean>
									</Condition.Value>
								</Condition>
								<Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay}">
									<Condition.Value>
										<sys:Boolean>True</sys:Boolean>
									</Condition.Value>
								</Condition>
								<Condition Binding="{Binding Path=(uiC:PpsReadOnlyPaneBehavior.IsReadOnly), RelativeSource={RelativeSource Self}, Mode=OneWay}">
									<Condition.Value>
										<sys:Boolean>False</sys:Boolean>
									</Condition.Value>
								</Condition>
								<Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}">
									<Condition.Value>
										<sys:Boolean>True</sys:Boolean>
									</Condition.Value>
								</Condition>
							</MultiDataTrigger.Conditions>
							<Setter TargetName="PART_ContentSite" Property="Margin" Value="5,3,46,3"/>
							<Setter TargetName="clearButton" Property="Visibility" Value="Visible"/>
						</MultiDataTrigger>

						<Trigger Property="ComboBox.IsDropDownOpen" Value="True">
							<Setter TargetName="clearButton" Property="IsHitTestVisible" Value="False"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource PPSnComboBoxStyle}" />

	<ControlTemplate x:Key="PPSnFilterComboBoxToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition Width="27" />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border x:Name="border" Grid.ColumnSpan="3" BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
			<TextBlock x:Name="emptyText" Grid.Column="0" Margin="6,3" VerticalAlignment="Center" Visibility="Hidden" Foreground="{StaticResource PPSnWindowForegroundBrush}"
					   Text="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}, Mode=OneTime}"/>
			<Button x:Name="clearButton" Grid.Column="1" Margin="0,1" Focusable="False" Template="{StaticResource PPSnComboBoxClearButtonTemplate}"
					Command="{Binding Path=(uiC:PpsSelectionChangedBehavior.Command), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}, Mode=OneWay}">
			</Button>
			<Viewbox x:Name="filterBox" Grid.Column="2" Margin="0,0,4,0" Opacity=".5" >
				<Canvas Width="24" Height="24">
					<Path Data="M3,2H21V2H21V4H20.92L15,9.92V22.91L9,16.91V9.91L3.09,4H3V2M11,16.08L13,18.08V9H13.09L18.09,4H5.92L10.92,9H11V16.08Z" 
						  Fill="{StaticResource PPSnWindowForegroundBrush}"/>
				</Canvas>
			</Viewbox>
		</Grid>

		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=SelectedIndex, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}, Mode=OneWay, Converter={StaticResource SelectedIndexConverter}}">
				<DataTrigger.Value>
					<sys:Boolean>False</sys:Boolean>
				</DataTrigger.Value>
				<Setter TargetName="clearButton" Property="Visibility" Value="Collapsed"/>
				<Setter TargetName="emptyText" Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}, Mode=OneWay}">
				<DataTrigger.Value>
					<sys:Boolean>True</sys:Boolean>
				</DataTrigger.Value>
				<Setter TargetName="clearButton" Property="IsHitTestVisible" Value="False"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True">
				<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
				<Setter Property="Opacity" TargetName="filterBox" Value=".75"/>
				<Setter Property="BorderThickness" TargetName="border" Value="1"/>
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="PPSnFilterComboBoxStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource PPSnComboBoxItemStyle}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource PPSnControlNormalBorderBrush}" />
		<Setter Property="Background" Value="{StaticResource PPSnControlBackgroundBrush}"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton x:Name="PART_ToggleButton" ClickMode="Press" Focusable="False"
									  IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
									  Template="{StaticResource PPSnFilterComboBoxToggleButtonTemplate}" Background="{TemplateBinding Background}"
									  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
						<ContentPresenter x:Name="PART_ContentSite" Margin="6,3,64,3" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center"
										  Content="{TemplateBinding ComboBox.SelectionBoxItem}"
										  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
										  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
						<Popup Name="PART_Popup" Placement="Bottom" VerticalOffset="1" Focusable="False" AllowsTransparency="True"
							   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" PopupAnimation="Slide">
							<Grid Name="PART_DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
								  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
								<Border Name="PART_DropDownBorder" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{StaticResource PPSnControlFocusedBorderBrush}">
									<ScrollViewer SnapsToDevicePixels="True" Style="{DynamicResource PPSnScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
										<VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
									</ScrollViewer>
								</Border>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!--DataSelector, like ComboBox with SearchTextBox-->

	<sys:Double x:Key="FixSearchBoxWidth">250</sys:Double>
	<sys:Double x:Key="FixSelectorWidth">340</sys:Double>

	<DataTemplate x:Key="PpsDataSelectorDefaultItemTemplate">
		<uiC:PpsDataSelectorItemTextBlock
			VerticalAlignment="Center"
			TextWrapping="NoWrap"
			TextTrimming="CharacterEllipsis"
			BaseText="{Binding Name}"
			SearchText="{Binding Path=FilterText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=uiC:PpsDataSelector}}">
		</uiC:PpsDataSelectorItemTextBlock>
	</DataTemplate>

	<DataTemplate x:Key="PpsDataSelectorDefaultSelectedValueTemplate">
		<TextBlock
			Text="{Binding Name}"
			TextWrapping="NoWrap"
			TextTrimming="CharacterEllipsis">
		</TextBlock>
	</DataTemplate>

	<Style TargetType="{x:Type uiC:PpsDataSelector}">
		<Setter Property="Height" Value="23"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="SelectedValueTemplate" Value="{StaticResource PpsDataSelectorDefaultSelectedValueTemplate}"/>
		<Setter Property="ItemTemplate" Value="{StaticResource PpsDataSelectorDefaultItemTemplate}"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource PPSnControlNormalBorderBrush}"/>
		<Setter Property="Background" Value="{StaticResource PPSnControlBackgroundBrush}"/>
		<Setter Property="TextElement.Foreground" Value="{StaticResource PPSnWindowForegroundBrush}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type uiC:PpsDataSelector}">
					<Grid>
						<ToggleButton x:Name="ToggleDropDownButton"
									  Template="{StaticResource PPSnComboBoxToggleButtonTemplate}"
									  IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
									  ClickMode="Press"
									  Focusable="False"
									  BorderThickness="{TemplateBinding BorderThickness}"
									  BorderBrush="{TemplateBinding BorderBrush}"
									  Background="{TemplateBinding Background}" />

						<ContentPresenter x:Name="ContentSite" Content="{Binding Path=SelectedValue, RelativeSource={RelativeSource TemplatedParent}}"
										  ContentTemplate="{TemplateBinding SelectedValueTemplate}"
										  IsHitTestVisible="False" Margin="5,3,23,3" HorizontalAlignment="Left" VerticalAlignment="Center" />

						<Button x:Name="ClearButton" Template="{StaticResource PPSnComboBoxClearButtonTemplate}"
								Command="{x:Static uiC:PpsDataSelector.ClearSelectionCommand}"
								HorizontalAlignment="Right" Width="27" Margin="0,2,18,2" Focusable="False" Visibility="Hidden">
						</Button>

						<Popup x:Name="PART_DropDownPopup" Placement="Bottom" VerticalOffset="1" Focusable="False"
							   IsOpen="{TemplateBinding IsDropDownOpen}" StaysOpen="False"
							   MinWidth="{Binding Path=ActualWidth, ElementName=ToggleDropDownButton}" Width="{StaticResource FixSelectorWidth}" MinHeight="122"
							   uiC:PpsPopupBehavior.ForceFocus="True"
							   AllowsTransparency="True" PopupAnimation="Slide" >
							<Border BorderBrush="{StaticResource PPSnControlFocusedBorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="33"/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<Grid Background="White" HorizontalAlignment="Right" Width="{StaticResource FixSearchBoxWidth}" Margin="6">
										<Grid.ColumnDefinitions>
											<ColumnDefinition/>
											<ColumnDefinition Width="20"/>
										</Grid.ColumnDefinitions>
										<TextBox x:Name="PART_SearchTextBox" Grid.Column="0"
												 BorderThickness="0" Background="Transparent" VerticalAlignment="Stretch" Height="Auto"
												 MaxLength="128"
												 Text="{Binding Path=FilterText, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, Delay=400}"/>
										<Viewbox Grid.Column="1" Margin="0,0,2,0">
											<Canvas Width="24" Height="24" Opacity=".65">
												<Path Data="{DynamicResource magnifyPathGeometry}" Fill="{StaticResource PPSnWindowForegroundBrush}"/>
											</Canvas>
										</Viewbox>
									</Grid>
									<ListBox x:Name="PART_ItemsListBox" Grid.Row="1" Focusable="False" Background="Transparent"
											 ItemsSource="{Binding Path=FilteredItemsSource, RelativeSource={RelativeSource TemplatedParent}}"
											 ItemTemplate="{TemplateBinding ItemTemplate}"
											 IsSynchronizedWithCurrentItem="True"
											 Style="{DynamicResource PPSnListBoxStyle}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
										<ListBox.ItemContainerStyle>
											<Style TargetType="{x:Type ListBoxItem}">
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="MinHeight" Value="29"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type ListBoxItem}">
															<Border x:Name="border" Background="Transparent" Padding="6,0">
																<ContentPresenter />
															</Border>
															<ControlTemplate.Triggers>
																<Trigger Property="IsSelected" Value="True">
																	<Setter Property="Background" TargetName="border" Value="{StaticResource PPSnMouseOverBrush}" />
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</ListBox.ItemContainerStyle>
									</ListBox>
								</Grid>
							</Border>
						</Popup>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{StaticResource PPSnWindowDisabledForegroundBrush}"/>
						</Trigger>

						<Trigger Property="IsReadOnly" Value="True">
							<Setter TargetName="ToggleDropDownButton" Property="IsEnabled" Value="False"/>
						</Trigger>

						<Trigger Property="IsEnabled" SourceName="ClearButton" Value="True">
							<Setter TargetName="ContentSite" Property="Margin" Value="5,3,46,3"/>
							<Setter TargetName="ClearButton" Property="Visibility" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>