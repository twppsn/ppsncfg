<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			        xmlns:uiC="clr-namespace:TecWare.PPSn.Controls;assembly=PPSn.Desktop.UI">

    <ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>

    <uiC:PpsTreeViewLevelToIndentConverter x:Key="LevelToIndentConverter" />

	<Style x:Key="TreeListViewExpanderButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Width" Value="19"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="Transparent">
						<Path x:Name="symbol" HorizontalAlignment="Left" VerticalAlignment="Center" Opacity=".75"
							  Stroke="{StaticResource PPSnWindowForegroundBrush}"
							  StrokeThickness="1"
							  StrokeDashCap="Round"
							  Data="M6,0 L11,5 6,10"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Data" TargetName="symbol" Value="M3,0 L8.5,5.5 14,0"/>
							<Setter Property="Opacity" TargetName="symbol" Value="1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TreeListViewItemStyle" TargetType="{x:Type uiC:PpsTreeListViewItem}">
        <Setter Property="Background" Value="{StaticResource PPSnAlternation0Brush}"/>
        <Setter Property="Foreground" Value="{StaticResource PPSnWindowForegroundBrush}"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource PpsFocusVisualStyle}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type uiC:PpsTreeListViewItem}">
					<StackPanel Orientation="Vertical">
						<Grid>
							<Border Name="panelBorder" Background="{TemplateBinding Background}" Padding="6,1" BorderThickness="0,0,0,1" SnapsToDevicePixels="True">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<ToggleButton x:Name="expander" Grid.Column="0" Style="{StaticResource TreeListViewExpanderButtonStyle}"
												  Margin="{Binding  RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type uiC:PpsTreeListViewItem}}, Converter={StaticResource LevelToIndentConverter}}"
												  IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type uiC:PpsTreeListViewItem}}}"
												  ClickMode="Press"/>
									<ContentPresenter Grid.Column="1" x:Name="PART_Header" ContentSource="Header"/>
								</Grid>
							</Border>
							<Rectangle x:Name="showSelection" Stroke="{StaticResource PPSnMarkerBrush}" StrokeThickness="1" Opacity="0" IsHitTestVisible="False" SnapsToDevicePixels="True"/>
						</Grid>
						<ItemsPresenter x:Name="itemsHost" />
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="expander" Property="Visibility" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsExpanded" Value="false">
							<Setter TargetName="itemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
							<Setter Property="Opacity" TargetName="showSelection" Value="1"/>
						</Trigger>
                        <Trigger Property="AlternationIndex" Value="1">
							<Setter TargetName="panelBorder" Property="Background" Value="{StaticResource PPSnAlternation1Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeListViewStyle" TargetType="{x:Type TreeView}">
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource TreeListViewItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Part_Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_Scrollviewer" Focusable="False" Padding="{TemplateBinding Padding}" HorizontalScrollBarVisibility="Disabled" Style="{DynamicResource PPSnScrollViewerStyle}"
									  Background="{TemplateBinding Background}" CanContentScroll="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                            <Setter Property="CanContentScroll" TargetName="PART_Scrollviewer" Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.45"/>
			</Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>