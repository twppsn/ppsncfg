<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
 			        xmlns:ui="http://tecware-gmbh.de/ppsn/wpf/2015">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource PPSnWindowForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="6,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="{StaticResource PPSnMouseOverBrush}"/>
							<Setter Property="BorderBrush" Value="{StaticResource PPSnWindowForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PPSnButtonPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarSplitButtonStyle" TargetType="{x:Type ui:PpsSplitButton}" BasedOn="{StaticResource ToolBarButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:PpsSplitButton}">
                    <Grid x:Name="layoutGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
						<Border x:Name="border" Padding="6,0,4,0" BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter/>
                        </Border>
                        <Button x:Name="PART_Dropdown" Grid.Column="1" Width="21" Focusable="False" 
								BorderThickness="0,1,1,1" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True"
								Foreground="{StaticResource PPSnWindowForegroundBrush}" Background="{TemplateBinding Background}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border BorderBrush="{TemplateBinding BorderBrush}"
														BorderThickness="{TemplateBinding BorderThickness}" 
														Background="{TemplateBinding Background}">
                                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" Opacity=".9"
														  Fill="{TemplateBinding Foreground}"
														  Data="M 0 3 L 5 10 L 10 3 Z"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="layoutGrid" Value="{StaticResource PPSnMouseOverBrush}"/>
							<Setter Property="BorderBrush" Value="{StaticResource PPSnWindowForegroundBrush}"/>
							<Setter Property="BorderBrush" TargetName="PART_Dropdown" Value="{StaticResource PPSnWindowForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="border" Value="{StaticResource PPSnButtonPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="PART_Dropdown" Value="True">
                            <Setter Property="Background" TargetName="PART_Dropdown" Value="{StaticResource PPSnButtonPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsOpen" Value="True">
							<Setter Property="Background" TargetName="layoutGrid" Value="{StaticResource PPSnMouseOverBrush}"/>
							<Setter Property="BorderBrush" Value="{StaticResource PPSnWindowForegroundBrush}"/>
							<Setter Property="BorderBrush" TargetName="PART_Dropdown" Value="{StaticResource PPSnWindowForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="PaneToolBarStyle" TargetType="{x:Type ToolBar}">
        <Style.Resources>
			<ui:PpsToolbarDataTemplateSelector x:Key="toolbarDataTemplateSelector"/>
			<DataTemplate x:Key="{x:Type ui:PpsUICommandButton}">
                <Button Style="{StaticResource ToolBarButtonStyle}" ToolTip="{Binding Description}" Command="{Binding Command}">
                    <StackPanel Orientation="Horizontal">
						<Viewbox Width="22" Height="22" Margin="0,0,3,0" HorizontalAlignment="Center">
							<Canvas Width="24" Height="24">
								<Path Data="{Binding Image, Mode=OneTime, Converter={x:Static ui:PpsConverter.ImageToPathGeometry}}"
									  Fill="{StaticResource PPSnActionButtonBrush}"/>
							</Canvas>
						</Viewbox>
						<TextBlock Text="{Binding DisplayText}" VerticalAlignment="Center" Foreground="{StaticResource PPSnWindowForegroundBrush}"/>
                    </StackPanel>
                </Button>
            </DataTemplate>
			<DataTemplate x:Key="{x:Type ui:PpsUISplitCommandButton}">
                <ui:PpsSplitButton Style="{StaticResource ToolBarSplitButtonStyle}" ToolTip="{Binding Description}" Command="{Binding Command}"
								 Popup="{Binding Popup}"
								 ContextMenu="{Binding ContextMenu}">
					<StackPanel Orientation="Horizontal">
						<Viewbox Width="22" Height="22" Margin="0,0,3,0" HorizontalAlignment="Center">
							<Canvas Width="24" Height="24">
								<Path Data="{Binding Image, Mode=OneTime, Converter={x:Static ui:PpsConverter.ImageToPathGeometry}}"
									  Fill="{StaticResource PPSnActionButtonBrush}"/>
							</Canvas>
						</Viewbox>
						<TextBlock Text="{Binding DisplayText}" VerticalAlignment="Center" Foreground="{StaticResource PPSnWindowForegroundBrush}"/>
                    </StackPanel>
                </ui:PpsSplitButton>
            </DataTemplate>
			<DataTemplate x:Key="Seperator">
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Background="{StaticResource PPSnSeparatorBrush}" Margin="6" />
            </DataTemplate>
		</Style.Resources>
		
		<Setter Property="ItemTemplateSelector" Value="{StaticResource toolbarDataTemplateSelector}"/>
		<Setter Property="Background" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Margin">
			<Setter.Value>
				<Thickness Left="{StaticResource PPSnPaneBorderSizeLeft}" 
						   Top="0"
						   Right="{StaticResource PPSnPaneBorderSizeRight}"
						   Bottom="0" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Border x:Name="border" BorderBrush="{StaticResource PPSnSeparatorBrush}" BorderThickness="0,0,0,1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ToolBarPanel x:Name="toolBarPanel" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,0,2" IsItemsHost="true" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PpsCommandbarControl
    <Style TargetType="{x:Type uiC:PpsCommandbarControl}" >
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<DataTemplate x:Key="PpsUICommandButtonCircleTemplate">
				<Button Style="{DynamicResource PPSnCircleButtonStyle}" 
						Command="{Binding Command}"
						Content="{Binding DisplayText}" 
						ToolTip="{Binding Description}"
						Tag="{Binding Image, Mode=OneTime, Converter={x:Static ui:PpsConverter.ImageToPathGeometry}}" 
						Margin="0,0,16,0"/>
			</DataTemplate>
			<DataTemplate x:Key="PpsUICommandbarSeparatorTemplate">
				<Grid Width="16"/>
			</DataTemplate>

			!- Default Templates -
			<DataTemplate x:Key="PpsUICommandbarDefaultButtonCircleTemplate">
				<Button Style="{DynamicResource PPSnCircleButtonStyle}" 
						Command="{Binding Command}"
                        Background="Red"
						Content="{Binding DisplayText}" 
						ToolTip="{Binding Description}"
						Tag="{Binding Image, Mode=OneTime, Converter={x:Static ui:PpsConverter.ImageToPathGeometry}}" 
						Margin="0,0,16,0"/>
			</DataTemplate>
			<DataTemplate x:Key="PpsUICommandbarDefaultButtonRectangleTemplate">
				<Button Style="{DynamicResource PPSnButtonStyle}" 
						Command="{Binding Command}"
						Content="{Binding DisplayText}" 
						ToolTip="{Binding Description}"
						Tag="{Binding Image, Mode=OneTime, Converter={x:Static ui:PpsConverter.ImageToPathGeometry}}" 
						Margin="0,0,16,0"/>
			</DataTemplate>
		</Style.Resources>
	</Style> -->
</ResourceDictionary>